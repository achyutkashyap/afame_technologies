# -*- coding: utf-8 -*-
"""HR Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZoH9swbgtqMbdZj3mGKVdwNztQ31AH0e
"""

import pandas as pd

# Load the dataset
file_path = '/content/HR Data.csv'
data = pd.read_csv(file_path)
data

columns_to_remove = ['EmployeeCount', 'EmployeeNumber', 'Over18', 'StandardHours']
data_cleaned = data.drop(columns=columns_to_remove)

columns_to_rename = {
    'Attrition': 'EmployeeAttrition',
    'BusinessTravel': 'BusinessTravelFrequency',
    'DailyRate': 'DailyIncome',
    'DistanceFromHome': 'CommuteDistance',
    'EducationField': 'FieldOfEducation',
    'Gender': 'EmployeeGender',
    'HourlyRate': 'HourlyIncome',
    'JobInvolvement': 'JobInvolvementLevel',
    'JobLevel': 'PositionLevel',
    'JobRole': 'JobTitle',
    'MaritalStatus': 'MaritalStatusOfEmployee',
    'MonthlyIncome': 'MonthlySalary',
    'MonthlyRate': 'MonthlyIncomeRate',
    'NumCompaniesWorked': 'NumberOfCompaniesWorked',
    'OverTime': 'OvertimeStatus',
    'PercentSalaryHike': 'SalaryHikePercentage',
    'PerformanceRating': 'EmployeePerformanceRating',
    'RelationshipSatisfaction': 'RelationshipSatisfactionLevel',
    'StockOptionLevel': 'StockOptions',
    'TotalWorkingYears': 'TotalYearsWorked',
    'TrainingTimesLastYear': 'TrainingFrequencyLastYear',
    'WorkLifeBalance': 'WorkLifeBalanceScore',
    'YearsAtCompany': 'TenureAtCompany',
    'YearsInCurrentRole': 'YearsInCurrentJobRole',
    'YearsSinceLastPromotion': 'YearsSinceLastJobPromotion',
    'YearsWithCurrManager': 'YearsWithCurrentManager'
}
data_cleaned.rename(columns=columns_to_rename, inplace=True)

data_cleaned = data_cleaned.drop_duplicates()

data_cleaned['EmployeeAttrition'] = data_cleaned['EmployeeAttrition'].str.capitalize()
data_cleaned['EmployeeGender'] = data_cleaned['EmployeeGender'].str.capitalize()
data_cleaned['OvertimeStatus'] = data_cleaned['OvertimeStatus'].str.capitalize()

nan_values = data_cleaned.isna().sum()
print(nan_values[nan_values > 0])

data_cleaned = data_cleaned.dropna()

# Save the cleaned dataset
data_cleaned.to_csv('Cleaned_HR_Data.csv', index=False)